// SPDX-License-Identifier: GPL-2.0
/*
  Copyright (C) 2008-2021 The Communi Project
*/


#include \"aboutdata.h\"

#include <QDebug>
#include <QCoreApplication>
#include <QFile>
#include <QStandardPaths>
#include <QRegularExpression>

#include <MDesktopEntry>

AboutData::AboutData(QObject* parent) : QObject(parent)
{
    return;
}

QString AboutData::applicationName()
{
    return QStringLiteral("$$RPM_NAME");
}
QString AboutData::applicationIcon()
{
    return QString(applicationName() + \".png\");
}

QString AboutData::displayName()
{
    QString applicationNamewHarbour = applicationName().remove(QStringLiteral(\"harbour-\"));
    return applicationNamewHarbour.left(1).toUpper()+applicationNamewHarbour.mid(1);
}

QString AboutData::description()
{
    return tr("$$RPM_DESCRIPTION");
}

QString AboutData::version()
{
    return QStringLiteral("$$RPM_VERSION");
}

QString AboutData::organizationDomain() const
{
    MDesktopEntry entry(QStandardPaths::locate(
                QStandardPaths::ApplicationsLocation, applicationName() + \".desktop\"));
    const auto section = QStringLiteral(\"X-Sailjail\");
    return entry.value(section, \"OrganizationName\");
}

QString AboutData::url()
{
    return QStringLiteral("$$RPM_URL");
}

void AboutData::setApplicationData() const
{
    QCoreApplication *app = QCoreApplication::instance();
    if (app) {
        // Remove git appendix name from user facing version
        app->setApplicationVersion(version().remove(QRegularExpression(\"\\\+.*\")));
        app->setApplicationName(applicationName());
        app->setOrganizationName(organizationDomain());
        app->setProperty(\"applicationDisplayName\", displayName());
        // app->setProperty("desktopFileName", aboutData.desktopFileName());
    } else {
        qWarning() << \"Could not initialize the equivalent properties of Q*Application: no instance (yet) existing.\";
    }
}

QString AboutData::contributors() const
{
    QString AppDataLocationReadOnly =
        QStandardPaths::standardLocations(QStandardPaths::AppLocalDataLocation).last().
        remove(\"/\" + QCoreApplication::organizationDomain());
    QString ret;

    QFile file(AppDataLocationReadOnly+\"/CONTRIBUTORS\");
    if(!file.open(QIODevice::ReadOnly))
        return ret;

    QTextStream in(&file);
    while(!in.atEnd()) {
        QString line = in.readLine();
        if(!line.startsWith(QStringLiteral(\"#\"))) {
            ret.append(line.toHtmlEscaped() + \"<br>\" + \"\\n\");
        }
    }
    file.close();

    return ret;
}
